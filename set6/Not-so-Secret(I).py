import gmpy2
import binascii
def isqrt(n):
  x = n
  y = (x + n // x) // 2
  while y < x:
    x = y
    y = (x + n // x) // 2
  return x

def fermat(n, verbose=True):
    a = isqrt(n) # int(ceil(n**0.5))
    b2 = a*a - n
    b = isqrt(n) # int(b2**0.5)
    count = 0
    while b*b != b2:
        #if verbose:
            # print('Trying: a=%s b2=%s b=%s' % (a, b2, b))
        a = a + 1
        b2 = a*a - n
        b = isqrt(b2) # int(b2**0.5)
        count += 1
    p=a+b
    q=a-b
    assert n == p * q
    print('a=',a)
    print('b=',b)
    print('p=',p)
    print('q=',q)
    print('pq=',p*q)
    return p, q

#n=134666

#fermat(n)

p = 17777324810733646969488445787976391269105128850805128551409042425916175469483806303918279424710789334026260880628723893508382860291986009694703181381742497
q = 17777324810733646969488445787976391269105128850805128551409042425916175469168770593916088768472336728042727873643069063316671869732507795155086000807594027
n = p*q
phi = (p-1)*(q-1)
ee = 17
ct = 6553737221362549160467829576342303867230194078458614544455788969208029481986028792492547434668066713199741381758065961061995002107860154452799857795971736508536768368771616799261668162539134913957419310641713821039539526627103122788149293368223969280354360846637109616466207418440363036312473649455733021730
dd = gmpy2.invert(ee, phi)
msg = gmpy2.powmod(ct, dd, n)
msg = msg % (2**200)
print binascii.unhexlify(hex(msg).strip('0xL'))
